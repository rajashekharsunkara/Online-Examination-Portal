version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: exam_postgres
    environment:
      POSTGRES_USER: exam_user
      POSTGRES_PASSWORD: exam_pass
      POSTGRES_DB: exam_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U exam_user"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - exam_network

  # Redis Cache & Pub/Sub
  redis:
    image: redis:7-alpine
    container_name: exam_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - exam_network

  # MinIO (S3-compatible storage)
  minio:
    image: minio/minio:latest
    container_name: exam_minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - exam_network

  # FastAPI Backend
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: exam_api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://exam_user:exam_pass@postgres:5432/exam_db
      - REDIS_URL=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
      - SECRET_KEY=dev-secret-key-change-in-production
      - ENVIRONMENT=development
      - WS_HEARTBEAT_INTERVAL=30
      - WS_HEARTBEAT_TIMEOUT=60
      - WS_MAX_CONNECTIONS_PER_USER=3
      - WS_CHECKPOINT_DEBOUNCE_SECONDS=2
    volumes:
      - ./api:/app
      - ./secrets:/app/secrets:ro
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - exam_network

  # Celery Worker
  worker:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: exam_worker
    environment:
      - DATABASE_URL=postgresql://exam_user:exam_pass@postgres:5432/exam_db
      - REDIS_URL=redis://redis:6379/0
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=minioadmin
      - MINIO_SECRET_KEY=minioadmin123
      - SECRET_KEY=dev-secret-key-change-in-production
      - ENVIRONMENT=development
    volumes:
      - ./api:/app
      - ./secrets:/app/secrets:ro
    depends_on:
      - postgres
      - redis
      - minio
    command: celery -A app.worker.celery worker --loglevel=info
    networks:
      - exam_network

  # React Web App (Student Exam)
  web:
    build:
      context: ./web
      dockerfile: Dockerfile.dev
    container_name: exam_web
    ports:
      - "5173:5173"
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_WS_URL=ws://localhost:8000
      - VITE_WS_HEARTBEAT_INTERVAL=30
      - VITE_CHECKPOINT_INTERVAL=15
    volumes:
      - ./web:/app
      - /app/node_modules
    command: npm run dev -- --host 0.0.0.0
    networks:
      - exam_network

  # Admin Dashboard
  admin:
    build:
      context: ./admin
      dockerfile: Dockerfile.dev
    container_name: exam_admin
    ports:
      - "5174:5174"
    environment:
      - VITE_API_URL=http://localhost:8000
    volumes:
      - ./admin:/app
      - /app/node_modules
    command: npm run dev -- --host 0.0.0.0 --port 5174
    networks:
      - exam_network

  # Hall Authenticator PWA (Chunk 10 - Coming Soon)
  # hall-auth:
  #   build:
  #     context: ./hall-auth
  #     dockerfile: Dockerfile.dev
  #   container_name: exam_hall_auth
  #   ports:
  #     - "5175:5175"
  #   environment:
  #     - VITE_API_URL=http://localhost:8000
  #   volumes:
  #     - ./hall-auth:/app
  #     - /app/node_modules
  #   command: npm run dev -- --host 0.0.0.0 --port 5175
  #   networks:
  #     - exam_network

  # Technician PWA (Chunk 11 - Coming Soon)
  # technician:
  #   build:
  #     context: ./technician
  #     dockerfile: Dockerfile.dev
  #   container_name: exam_technician
  #   ports:
  #     - "5176:5176"
  #   environment:
  #     - VITE_API_URL=http://localhost:8000
  #   volumes:
  #     - ./technician:/app
  #     - /app/node_modules
  #   command: npm run dev -- --host 0.0.0.0 --port 5176
  #   networks:
  #     - exam_network

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  exam_network:
    driver: bridge
