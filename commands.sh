#!/bin/bash
# OEP Exam Platform - Command Reference Card
# Quick commands for common operations

echo "╔═══════════════════════════════════════════════════════════╗"
echo "║     OEP Exam Platform - Command Reference                ║"
echo "╚═══════════════════════════════════════════════════════════╝"
echo ""

echo "🚀 SETUP & START"
echo "  ./setup-demo.sh              # Full automated setup (first time)"
echo "  ./quick-start.sh             # Quick start (Docker installed)"
echo "  docker-compose up -d         # Start all services"
echo "  docker-compose up -d --build # Rebuild and start"
echo ""

echo "🛑 STOP & CLEANUP"
echo "  docker-compose down          # Stop all services"
echo "  docker-compose down -v       # Stop and remove volumes (deletes data)"
echo "  docker-compose stop          # Stop but keep containers"
echo "  make clean                   # Clean up everything"
echo ""

echo "🔄 RESTART & LOGS"
echo "  docker-compose restart       # Restart all services"
echo "  docker-compose restart api   # Restart specific service"
echo "  docker-compose logs -f       # View all logs (follow)"
echo "  docker-compose logs -f api   # View API logs only"
echo "  make logs                    # View all logs"
echo ""

echo "📊 DATABASE"
echo "  docker-compose exec api alembic upgrade head  # Apply migrations"
echo "  docker-compose exec api alembic current       # Show current version"
echo "  docker-compose exec api python scripts/seed.py # Seed demo data"
echo "  docker-compose exec db psql -U exam_user exam_db # Access database"
echo ""

echo "🧪 TESTING"
echo "  docker-compose exec api pytest                    # Run all backend tests"
echo "  docker-compose exec api pytest tests/test_grading.py # Specific test file"
echo "  docker-compose exec api pytest -v                 # Verbose output"
echo "  docker-compose exec api pytest --cov=app          # With coverage"
echo "  make test                                         # Run all tests"
echo ""

echo "🔍 DEBUGGING"
echo "  docker-compose ps                    # Show running containers"
echo "  docker-compose exec api bash         # Shell into API container"
echo "  docker-compose exec db bash          # Shell into database container"
echo "  docker-compose exec api python       # Python REPL in API container"
echo "  docker-compose logs --tail=100 api   # Last 100 log lines"
echo ""

echo "🌐 HEALTH CHECKS"
echo "  curl http://localhost:8000/docs      # API documentation"
echo "  curl http://localhost:8000/health    # Health endpoint"
echo "  docker-compose exec db pg_isready -U exam_user  # Database ready"
echo "  docker-compose exec redis redis-cli ping        # Redis ping"
echo ""

echo "📝 DEVELOPMENT"
echo "  docker-compose exec api alembic revision --autogenerate -m \"msg\"  # Create migration"
echo "  docker-compose exec web npm install    # Install frontend deps"
echo "  docker-compose exec web npm run build  # Build frontend"
echo "  docker-compose build --no-cache api    # Rebuild API (no cache)"
echo ""

echo "🔐 DEMO CREDENTIALS"
echo "  Admin:      admin / admin123"
echo "  Instructor: hic1 / pass123"
echo "  Student:    student001 / pass123"
echo ""

echo "📍 ACCESS POINTS"
echo "  Student App:  http://localhost:5173"
echo "  Admin Panel:  http://localhost:5174"
echo "  API Docs:     http://localhost:8000/docs"
echo "  MinIO:        http://localhost:9001"
echo ""

echo "📚 DOCUMENTATION"
echo "  cat DEMO_READY.md           # Demo setup summary"
echo "  cat DEMO_SETUP.md           # Detailed setup guide"
echo "  cat CHUNK_9_COMPLETE.md     # Grading system docs"
echo "  cat QUICK_REFERENCE.md      # Quick reference"
echo ""

echo "💡 USEFUL COMBOS"
echo "  # Fresh start (WARNING: deletes data)"
echo "  docker-compose down -v && ./setup-demo.sh"
echo ""
echo "  # Quick rebuild and restart"
echo "  docker-compose down && docker-compose up -d --build"
echo ""
echo "  # Reset database only"
echo "  docker-compose down -v db && docker-compose up -d && sleep 30 && \\"
echo "  docker-compose exec api alembic upgrade head && \\"
echo "  docker-compose exec api python scripts/seed.py"
echo ""
echo "  # View specific service errors"
echo "  docker-compose logs api | grep ERROR"
echo ""

echo "✅ DEMO CHECKLIST"
echo "  docker-compose ps                    # All containers running?"
echo "  curl -s http://localhost:8000/docs   # API accessible?"
echo "  curl -s http://localhost:5173        # Student app loading?"
echo "  docker-compose logs api | grep ERROR # Any errors?"
echo ""

echo "🎬 READY TO DEMO!"
echo ""
